{"ast":null,"code":"import { GET_CANS, ORDER_ASC, ORDER_DESC, ORDER_FAT, ORDER_FIT, ORDER_MAX, ORDER_MIN, TEMPS, FILTER, SEARCH, CAN, PAGINATION, PAG } from './types';\nimport axios from 'axios';\nconst locahost = 'http://localhost:3001/';\nexport const getCans = () => {\n  return async function (dispatch) {\n    try {\n      const res = await axios(`${locahost}dogs`);\n      console.log(res.data);\n      const payload = res.data.map(e => {}).filter(Boolean);\n      return dispatch({\n        type: GET_CANS,\n        payload\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getTemps = () => {\n  return async function (dispatch) {\n    try {\n      const res = await axios(`${locahost}temperament`);\n      const payload = res.data;\n      return dispatch({\n        type: TEMPS,\n        payload\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const newCan = async state => {\n  try {\n    await axios.post(`${locahost}dogs`);\n    return true;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const [activePage, getPages, viewCan, search, filterBy, orderAsc, orderDesc, orderFat, orderFit, orderMax, orderMin] = [payload => {\n  return {\n    type: PAG,\n    payload\n  };\n}, () => {\n  return {\n    type: PAGINATION\n  };\n}, payload => {\n  return {\n    type: CAN,\n    payload\n  };\n}, payload => {\n  return {\n    type: SEARCH,\n    payload\n  };\n}, payload => {\n  return {\n    type: FILTER,\n    payload\n  };\n}, () => {\n  return {\n    type: ORDER_ASC\n  };\n}, () => {\n  return {\n    type: ORDER_DESC\n  };\n}, () => {\n  return {\n    type: ORDER_FAT\n  };\n}, () => {\n  return {\n    type: ORDER_FIT\n  };\n}, () => {\n  return {\n    type: ORDER_MAX\n  };\n}, () => {\n  return {\n    type: ORDER_MIN\n  };\n}];","map":{"version":3,"sources":["/media/jhoanburbano/ubuntu-data/jhoanburbano/projects/react/PI-Dogs/client/src/redux/actions/actions.js"],"names":["GET_CANS","ORDER_ASC","ORDER_DESC","ORDER_FAT","ORDER_FIT","ORDER_MAX","ORDER_MIN","TEMPS","FILTER","SEARCH","CAN","PAGINATION","PAG","axios","locahost","getCans","dispatch","res","console","log","data","payload","map","e","filter","Boolean","type","error","getTemps","newCan","state","post","activePage","getPages","viewCan","search","filterBy","orderAsc","orderDesc","orderFat","orderFit","orderMax","orderMin"],"mappings":"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","sourcesContent":["import {\n\tGET_CANS,\n\tORDER_ASC,\n\tORDER_DESC,\n\tORDER_FAT,\n\tORDER_FIT,\n\tORDER_MAX,\n\tORDER_MIN,\n\tTEMPS,\n\tFILTER,\n\tSEARCH,\n\tCAN,\n\tPAGINATION,\n\tPAG\n} from './types';\nimport axios from 'axios';\nconst locahost = 'http://localhost:3001/';\n\nexport const getCans = () => {\n\treturn async function(dispatch) {\n\t\ttry {\n\t\t\tconst res = await axios(`${locahost}dogs`);\n\t\t\tconsole.log(res.data);\n\t\t\tconst payload = res.data.map((e) => {\n                \n\t\t\t}).filter(Boolean);\n\t\t\treturn dispatch({\n\t\t\t\ttype: GET_CANS,\n\t\t\t\tpayload\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\nexport const getTemps = () => {\n\treturn async function(dispatch) {\n\t\ttry {\n\t\t\tconst res = await axios(`${locahost}temperament`);\n\t\t\tconst payload = res.data;\n\t\t\treturn dispatch({\n\t\t\t\ttype: TEMPS,\n\t\t\t\tpayload\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\nexport const newCan = async (state) => {\n\ttry {\n\t\tawait axios.post(`${locahost}dogs`);\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\nexport const [ activePage, getPages, viewCan, search, filterBy, orderAsc, orderDesc, orderFat, orderFit, orderMax, orderMin ] = [\n\t(payload) => {\n\t\treturn { type: PAG, payload };\n\t},\n\t() => {\n\t\treturn { type: PAGINATION };\n\t},\n\t(payload) => {\n\t\treturn { type: CAN, payload };\n\t},\n\t(payload) => {\n\t\treturn { type: SEARCH, payload };\n\t},\n\t(payload) => {\n\t\treturn { type: FILTER, payload };\n\t},\n\t() => {\n\t\treturn { type: ORDER_ASC };\n\t},\n\t() => {\n\t\treturn { type: ORDER_DESC };\n\t},\n\t() => {\n\t\treturn { type: ORDER_FAT };\n\t},\n\t() => {\n\t\treturn { type: ORDER_FIT };\n\t},\n\t() => {\n\t\treturn { type: ORDER_MAX };\n\t},\n\t() => {\n\t\treturn { type: ORDER_MIN };\n\t}\n];\n"]},"metadata":{},"sourceType":"module"}